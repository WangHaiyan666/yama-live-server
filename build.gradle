buildscript {
    ext {
        lfspVersion = '1.0.7'

        springBootVersion = '2.3.12.RELEASE'
        springCloudVersion = 'Hoxton.SR10'
    }

    repositories {
        mavenCentral()
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
//        classpath 'com.bmuschko:gradle-docker-plugin:6.7.0'
    }
}

configure(subprojects) {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'java-library'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'idea'

    group = 'com.newverse.yama.live'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all' << '-Xlint:-processing' << '-Xlint:-varargs'
        options.compilerArgs << '-parameters'
        options.warnings = true
        options.deprecation = true
    }

    task integrationTest(type: Test, dependsOn: testClasses) {
        description = 'Integration test'
        group = 'verification'
        include '**/*IntegrationTest.class'
    }

    sourceSets {
        test {
            java {
                srcDir "${project.projectDir}/src/integrationtest/java"
            }
            resources {
                srcDir "${project.projectDir}/src/integrationtest/resources"
            }
        }
    }

    jacoco {
        toolVersion = '0.8.4'
        reportsDir = file("$buildDir/jacoco")
    }

    repositories {
        mavenCentral()
    }

    test {
        exclude '**/*IntegrationTest.class'
        useJUnitPlatform()
        maxHeapSize = '4G'
    }

    integrationTest {
        useJUnitPlatform()
        maxHeapSize = '4G'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
        dependencies {
            [       // format [<groupId:artifactId>, <version>],

                    ['com.fasterxml.jackson.dataformat:jackson-dataformat-yaml', '2.12.1'],
                    ['com.fasterxml.jackson.datatype:jackson-datatype-jsr310', '2.12.1'],
                    ['com.fasterxml.jackson.module:jackson-module-kotlin', '2.12.1'],

                    // mybatis: DB library
                    ['org.mybatis.spring.boot:mybatis-spring-boot-starter', '2.1.4'],
                    ['org.mybatis.spring.boot:mybatis-spring-boot-starter-test', '2.1.4'],
                    ['org.springframework:spring-jdbc', '5.2.13.RELEASE'],
                    ['org.aspectj:aspectjweaver', '1.9.6'],

                    ['mysql:mysql-connector-java', '8.0.23'],
                    ['org.mybatis:mybatis-spring', '2.0.6'],
                    ['org.mybatis:mybatis', '3.5.6'],

                    // okhttp3 / retrofit
//                    ['com.squareup.okhttp3:okhttp', '4.9.0'],
//                    ['com.squareup.okhttp3:logging-interceptor', '4.9.0'],
//                    ['com.squareup.retrofit2:retrofit', '2.9.0'],
//                    ['com.squareup.retrofit2:converter-jackson', '2.9.0'],

                    //swagger
                    ['io.springfox:springfox-swagger2', '2.9.2'],
                    ['io.springfox:springfox-swagger-ui', '2.9.2'],
                    ['io.springfox:springfox-core', '2.9.2'],

                    // logging
                    ['net.logstash.logback:logstash-logback-encoder', '6.6'],

                    // lombok
                    ['org.projectlombok:lombok', '1.18.20'],

                    // test
                    ['org.springframework.boot:spring-boot-starter-test', "${springBootVersion}"],

                    // https://mvnrepository.com/artifact/com.google.api-client/google-api-client
                    ['com.google.api-client:google-api-client','1.31.5']

                    /*//https://mvnrepository.com/artifact/software.amazon.awssdk/bom
                    ['software.amazon.awssdk:bom ','2.19.12']*/


            ].each { dependency it[0] + ":" + it[1] }
        }
    }


    configurations {
        testImplementation {
            exclude group: 'junit', module: 'junit'
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        all {
            resolutionStrategy {
                cacheChangingModulesFor 0, 'seconds'
            }
        }
    }
}
